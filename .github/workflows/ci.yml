name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: blacksmith-4vcpu-ubuntu-2404
    strategy:
      matrix:
        go-version: ['1.24']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: useblacksmith/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: useblacksmith/cache@v5
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Run integration tests
        run: go test -v -tags=integration ./cmd/...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella

  lint:
    name: Lint
    runs-on: blacksmith-4vcpu-ubuntu-2404
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: useblacksmith/setup-go@v6
        with:
          go-version: '1.24'

      - name: Run golangci-lint
        uses: useblacksmith/golangci-lint-action@v6
        with:
          version: latest

  build:
    name: Build
    runs-on: blacksmith-4vcpu-ubuntu-2404
    needs: [test, lint]
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: useblacksmith/setup-go@v6
        with:
          go-version: '1.24'

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -v -o ./dist/agentree-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }} ./cmd/agentree

      - name: Test binary
        if: matrix.os == 'linux' && matrix.arch == 'amd64'
        run: |
          ./dist/agentree-linux-amd64 --version